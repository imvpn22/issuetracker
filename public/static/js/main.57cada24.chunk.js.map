{"version":3,"sources":["serviceWorker.js","components/issues.js","App.js","components/header.js","components/newIssue.js","components/viewIssue.js","components/editIssue.js","components/404.js","index.js"],"names":["Boolean","window","location","hostname","match","Issues","_this","this","react_default","a","createElement","className","type","placeholder","value","props","queryText","onChange","e","handleQuery","required","autoFocus","isSearching","issues","length","map","issue","index","key","_id","description","severity","status","Moment","createdDate","format","resolvedDate","href","onClick","deleteIssue","colSpan","React","Component","API_URL","concat","BASE_URL","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getIssues","fetch","then","res","json","setState","catch","err","console","log","id","method","state","filter","event","preventDefault","target","searchIssues","query","Header","react_router_dom","exact","activeClassName","to","NewIssue","handleDescriptionChange","handleSeverityChange","handleStatusChange","handleCreatedDateChange","handleResolvedDateChange","handleSubmit","headers","Content-type","body","JSON","stringify","newIssue","history","push","_this2","onSubmit","htmlFor","rows","ViewIssue","pathname","split","EditIssue","updatedIssue","_this3","Notfound","routing","header","react_router","path","component","NotFound","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57cada24.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Moment from 'moment';\n\nclass Issues extends React.Component {\n  render() {\n    return (\n      <div className='container'>\n\n        <div className='issues-header'>\n          <div className='issues-heading'>Issues List</div>\n          <div className='search-box'>\n            <input type='text'\n              placeholder='Search for issues'\n              value={this.props.queryText}\n              onChange={e => this.props.handleQuery(e)}\n              required={true}\n              autoFocus={true}/>\n            <button type='submit' value='Search'>\n                <i className={(this.props.isSearching ?\n                  'fas fa-circle-notch fa-spin' : 'fas fa-search')}></i>\n            </button>\n          </div>\n        </div>\n\n        <table className='table table-bordered table-hover'>\n        <tbody>\n        <tr>\n          <th> S.N. </th>\n          <th> Description </th>\n          <th> Severity </th>\n          <th> Status </th>\n          <th> Created Date </th>\n          <th> Resolved Date </th>\n          <th> View </th>\n          <th> Edit </th>\n          <th> Delete </th>\n        </tr>\n\n        {this.props.issues.length > 0 ? this.props.issues.map((issue, index) => (\n          <tr key={issue._id}>\n            <td> {index + 1} </td>\n            <td> {issue.description} </td>\n            <td> {issue.severity} </td>\n            <td> {issue.status} </td>\n            <td> {Moment(issue.createdDate).format('Do MMM YYYY')} </td>\n            <td> {Moment(issue.resolvedDate).format('Do MMM YYYY')} </td>\n            <td>\n              <a href={'/issue/' + issue._id + '/view'}>\n                <button className='btn btn-primary'>\n                  View\n                </button>\n              </a>\n             </td>\n             <td>\n              <a href={'/issue/' + issue._id + '/edit'}>\n                <button className='btn btn-info'>\n                  Edit\n                </button>\n              </a>\n             </td>\n             <td>\n              <button className='btn btn-danger'\n                onClick={() => this.props.deleteIssue(issue._id)}>\n                Delete\n              </button>\n             </td>\n          </tr>\n        )) :\n          <tr className='center'>\n            <td className='no-issue' colSpan='9'> No data to show !!! </td>\n          </tr>\n         }\n\n         </tbody>\n        </table>\n      </div>\n     )\n  }\n}\n\nexport default Issues;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Issues from './components/issues';\n\nimport { BASE_URL } from './config';\n\nconst API_URL = `${BASE_URL}/issues`;\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      issues: [],\n      isSearching: false,\n      queryText: ''\n    }\n  }\n\n  componentDidMount() {\n    // Get Issues from API\n    this.getIssues();\n  }\n\n  getIssues = () => {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(issues => {\n        this.setState({issues});\n      }).catch(err => {\n        console.log(err);\n      });\n  };\n\n  deleteIssue = (id) => {\n    fetch(`${API_URL}/${id}`, {\n      method: 'delete'\n    }).then(res => res.json())\n      .then(res => {\n        console.log(res);\n\n        let issues = this.state.issues;\n        issues = issues.filter(issue => issue._id !== id);\n        this.setState({issues});\n\n      }).catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleQuery = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      queryText: event.target.value\n    }, () => { this.searchIssues(); });\n\n\n  };\n\n  searchIssues = () => {\n    this.setState({ isSearching: true });\n    let query = this.state.queryText;\n    fetch(`${API_URL}?q=${query}`)\n      .then(res => res.json())\n      .then(issues => {\n        this.setState({\n          issues: issues,\n          isSearching: false\n        });\n      }).catch(err => {\n        this.setState({ isSearching: false });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Issues\n          issues={this.state.issues}\n          deleteIssue={this.deleteIssue}\n          isSearching={this.state.isSearching}\n          handleQuery={this.handleQuery}\n          queryText={this.state.queryText}\n        />\n        {/*<a href='/new-issue' className='add-issue-btn'>\n            <i className=\"fas fa-plus\"></i>\n        </a>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm bg-light justify-content-between\">\n        <div className=\"navbar-brand\">\n          <a className=\"product-title\" href=\"/\"> Issue Tracker </a>\n        </div>\n        <div>\n          <NavLink className=\"nav-link\" exact activeClassName=\"active\" to=\"/new-issue\">\n          New Issue\n          </NavLink>\n        </div>\n      </nav>\n      )\n  }\n}\n\nexport default Header\n","import React from 'react';\nimport Moment from 'moment';\n\nimport { BASE_URL } from '../config';\n\nconst API_URL = `${BASE_URL}/issues`;\n\nclass NewIssue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issue: {}\n    }\n  }\n\n  handleDescriptionChange = (event) => {\n    let issue = this.state.issue;\n    issue.description = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleSeverityChange = (event) => {\n    let issue = this.state.issue;\n    issue.severity = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleStatusChange = (event) => {\n    let issue = this.state.issue;\n    issue.status = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleCreatedDateChange = (event) => {\n    let issue = this.state.issue;\n    issue.createdDate = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleResolvedDateChange = (event) => {\n    let issue = this.state.issue;\n    issue.resolvedDate = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    let issue = this.state.issue;\n\n    fetch(`${API_URL}`, {\n        method: 'post',\n        headers: { 'Content-type': 'application/json' },\n        body: JSON.stringify(issue)\n      }\n    ).then(res => res.json())\n    .then(newIssue => {\n      this.props.history.push(`/issue/${newIssue._id}/view`);\n    }).catch(err => {\n      console.log(err);\n    });\n\n  };\n\n  render() {\n    return (\n      <div className='container'>\n\n        <form\n          className='form form-horizontal new-issue-form issue-card'\n          onSubmit={e => this.handleSubmit(e)}>\n\n          <div className='form-group'>\n            <h4>New Issue</h4>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              rows='4'\n              className='col-sm-9'\n              required\n              id='description'\n              value={this.state.issue.description}\n              onChange={e => this.handleDescriptionChange(e)}\n              placeholder='Enter Description of the Issue'\n             />\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='severity'>\n              Severity\n            </label>\n            <select\n              className='col-sm-9'\n              required\n              id='severity'\n              value={this.state.issue.severity}\n              onChange={e => this.handleSeverityChange(e)}>\n              <option value=''>Select an option</option>\n              <option value='Critical'>Critical</option>\n              <option value='Major'>Major</option>\n              <option value='Minor'>Minor</option>\n             </select>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='status'>\n              Status\n            </label>\n            <select\n              className='col-sm-9'\n              required\n              id='status'\n              value={this.state.issue.status}\n              onChange={e => this.handleStatusChange(e)}>\n              <option value=''>Select an option</option>\n              <option value='Open'>Open</option>\n              <option value='In Progress'>In Progress</option>\n              <option value='Closed'>Closed</option>\n             </select>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='createdDate'>\n              Created Date\n            </label>\n            <input\n              type='date'\n              className='col-sm-9'\n              required\n              id='createdDate'\n              value={Moment(this.state.issue.createdDate).format('YYYY-MM-DD')}\n              onChange={e => this.handleCreatedDateChange(e)}\n             />\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='resolvedDate'>\n              Resolved Date\n            </label>\n            <input\n              type='date'\n              className='col-sm-9'\n              required\n              id='resolvedDate'\n              value={Moment(this.state.issue.resolvedDate).format('YYYY-MM-DD')}\n              onChange={e => this.handleResolvedDateChange(e)}\n             />\n          </div>\n\n          <div className='form-group'>\n            <span className='col-sm-4'>\n              <button className=\"btn btn-primary\" type='submit'>\n                Create\n              </button>\n            </span>\n          </div>\n        </form>\n        <span className='col-sm-offset-6 col-sm-8'>\n          <a href={'/'}>\n            <button className='btn btn-danger'> Home </button>\n          </a>\n        </span>\n\n      </div>\n    )\n  }\n}\n\nexport default NewIssue;\n","import React from 'react';\nimport Moment from 'moment';\n\nimport { BASE_URL } from '../config';\n\nconst API_URL = `${BASE_URL}/issues`;\n\nclass ViewIssue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issue: {}\n    }\n  }\n\n  componentDidMount() {\n\n    let id = this.props.location.pathname.split('/')[2];\n\n    fetch(`${API_URL}/${id}`).then(res => res.json())\n    .then(issue => {\n      this.setState({ issue });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n\n        <div className='issue-card form form-horizontal'>\n            <div className='form-group center'>\n              <h5>Issue Details</h5>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Description </span>\n              <span className='col-sm-9'>{this.state.issue.description}</span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Severity </span>\n              <span className='col-sm-9'>{this.state.issue.severity}</span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Status </span>\n              <span className='col-sm-9'>{this.state.issue.status}</span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Created Date </span>\n              <span className='col-sm-9'>\n                {Moment(this.state.issue.createdDate).format('Do MMM YYYY')}\n              </span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Resolved Date </span>\n              <span className='col-sm-9'>\n                {Moment(this.state.issue.resolvedDate).format('Do MMM YYYY')}\n              </span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'>\n                <a href={'/issue/' + this.state.issue._id + '/edit'}>\n                  <button className='btn btn-primary'> Edit </button>\n                </a>\n              </span>\n              <span className='col-sm-offset-6 col-sm-9'>\n                <a href={'/'}>\n                  <button className='btn btn-danger'> Home </button>\n                </a>\n              </span>\n            </div>\n\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default ViewIssue;\n","import React from 'react';\nimport Moment from 'moment';\n\nimport { BASE_URL } from '../config';\n\nconst API_URL = `${BASE_URL}/issues`;\n\nclass EditIssue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issue: {}\n    }\n  }\n\n  componentDidMount() {\n\n    let id = this.props.location.pathname.split('/')[2];\n\n    fetch(`${API_URL}/${id}`).then(res => res.json())\n    .then(issue => {\n      this.setState({ issue });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  handleDescriptionChange = (event) => {\n    let issue = this.state.issue;\n    issue.description = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleSeverityChange = (event) => {\n    let issue = this.state.issue;\n    issue.severity = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleStatusChange = (event) => {\n    let issue = this.state.issue;\n    issue.status = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleCreatedDateChange = (event) => {\n    let issue = this.state.issue;\n    issue.createdDate = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleResolvedDateChange = (event) => {\n    let issue = this.state.issue;\n    issue.resolvedDate = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    let issue = this.state.issue;\n\n    fetch(`${API_URL}/${issue._id}`, {\n        method: 'put',\n        headers: { 'Content-type': 'application/json' },\n        body: JSON.stringify(issue)\n      }\n    ).then(res => res.json())\n    .then(updatedIssue => {\n      this.props.history.push(`/issue/${updatedIssue._id}/view`);\n    }).catch(err => {\n      console.log(err);\n    });\n\n  };\n\n  render() {\n    return (\n      <div className='container'>\n\n        <form\n          className='form form-horizontal new-issue-form issue-card'\n          onSubmit={e => this.handleSubmit(e)}>\n\n          <div className='form-group'>\n            <h4>Edit Issue</h4>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              className='col-sm-9'\n              rows='4'\n              required\n              id='description'\n              value={this.state.issue.description}\n              onChange={e => this.handleDescriptionChange(e)}\n              placeholder='Enter Description of the Issue'\n             />\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='severity'>\n              Severity\n            </label>\n            <select\n              className='col-sm-9'\n              required\n              id='severity'\n              value={this.state.issue.severity}\n              onChange={e => this.handleSeverityChange(e)}\n             >\n              <option value='Critical'>Critical</option>\n              <option value='Major'>Major</option>\n              <option value='Minor'>Minor</option>\n             </select>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='status'>\n              Status\n            </label>\n            <select\n              className='col-sm-9'\n              required\n              id='status'\n              value={this.state.issue.status}\n              onChange={e => this.handleStatusChange(e)}\n             >\n              <option value='Open'>Open</option>\n              <option value='In Progress'>In Progress</option>\n              <option value='Closed'>Closed</option>\n             </select>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='createdDate'>\n              Created Date\n            </label>\n            <input\n              type='date'\n              className='col-sm-9'\n              required\n              id='createdDate'\n              value={Moment(this.state.issue.createdDate).format('YYYY-MM-DD')}\n              onChange={e => this.handleCreatedDateChange(e)}\n             />\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='resolvedDate'>\n              Resolved Date\n            </label>\n            <input\n              type='date'\n              className='col-sm-9'\n              required\n              id='resolvedDate'\n              value={Moment(this.state.issue.resolvedDate).format('YYYY-MM-DD')}\n              onChange={e => this.handleResolvedDateChange(e)}\n             />\n          </div>\n\n          <div className='form-group'>\n            <span className='col-sm-4'>\n              <button className=\"btn btn-info\" type='submit'>\n                Update\n              </button>\n            </span>\n          </div>\n        </form>\n        <span className='col-sm-offset-6 col-sm-8'>\n          <a href={'/'}>\n            <button className='btn btn-danger'> Home </button>\n          </a>\n        </span>\n\n      </div>\n    )\n  }\n}\n\nexport default EditIssue;\n","import React from 'react';\n\nconst Notfound = () => <div className='container'>\n  <h1>Page Not found</h1>\n  Go to <a href='/'>Home</a>\n</div>;\n\nexport default Notfound;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Header from './components/header';\nimport NewIssue from './components/newIssue';\nimport ViewIssue from './components/viewIssue';\nimport EditIssue from './components/editIssue';\nimport NotFound from './components/404';\n\nconst routing = (\n  <Router>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/new-issue\" component={NewIssue} />\n      <Route exact path=\"/issue/:id/view\" component={ViewIssue} />\n      <Route exact path=\"/issue/:id/edit\" component={EditIssue} />\n      <Route component={NotFound} />\n    </Switch>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}