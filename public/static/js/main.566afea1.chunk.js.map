{"version":3,"sources":["serviceWorker.js","components/colFilters.js","components/issues.js","App.js","components/header.js","components/newIssue.js","components/viewIssue.js","components/editIssue.js","components/404.js","index.js"],"names":["Boolean","window","location","hostname","match","ColFilters","props","react_default","a","createElement","className","filters","showFilters","onClick","updateFilter","description","type","checked","severity","status","createdDate","resolvedDate","Issues","_this","this","placeholder","value","queryText","onChange","e","handleQuery","required","autoFocus","isSearching","colFilters","issues","length","map","issue","index","key","_id","Moment","format","href","deleteIssue","colSpan","React","Component","API_URL","concat","BASE_URL","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getIssues","fetch","then","res","json","setState","catch","err","console","log","id","method","state","filter","event","preventDefault","target","searchIssues","query","Header","react_router_dom","exact","activeClassName","to","NewIssue","handleDescriptionChange","handleSeverityChange","handleStatusChange","handleCreatedDateChange","handleResolvedDateChange","handleSubmit","headers","Content-type","body","JSON","stringify","newIssue","history","push","_this2","onSubmit","htmlFor","rows","ViewIssue","pathname","split","EditIssue","updatedIssue","_this3","Notfound","routing","header","react_router","path","component","NotFound","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.566afea1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst ColFilters = (props) => <div className=\"col-filter\">\n      <button\n        className = {'btn ' + (props.filters.showFilters ? 'btn-success' : 'btn-default')}\n        onClick={() => props.updateFilter('showFilters')}>\n        Column Filters\n      </button>\n\n      <span className={'filters ' + (!props.filters.showFilters ? 'hidden' : '')}>\n        <label className={props.filters.description ? 'active-filter' : ''}>\n          Description\n          <input type=\"checkbox\"\n            checked={props.filters.description}\n            onClick={() => props.updateFilter('description')}/>\n        </label>\n\n        <label className={props.filters.severity ? 'active-filter' : ''}>\n          Severity\n          <input type=\"checkbox\"\n            checked={props.filters.severity}\n            onClick={() => props.updateFilter('severity')}/>\n        </label>\n\n        <label className={props.filters.status ? 'active-filter' : ''}>\n          Status\n          <input type=\"checkbox\"\n            checked={props.filters.status}\n            onClick={() => props.updateFilter('status')}/>\n        </label>\n\n        <label className={props.filters.createdDate ? 'active-filter' : ''}>\n          Created Date\n          <input type=\"checkbox\"\n            checked={props.filters.createdDate}\n            onClick={() => props.updateFilter('createdDate')}/>\n        </label>\n\n        <label className={props.filters.resolvedDate ? 'active-filter' : ''}>\n          Resolved Date\n          <input type=\"checkbox\"\n            checked={props.filters.resolvedDate}\n            onClick={() => props.updateFilter('resolvedDate')}/>\n        </label>\n      </span>\n\n    </div>;\n\nexport default ColFilters;\n","import React from 'react';\nimport Moment from 'moment';\n\nimport ColFilters from './colFilters';\n\nclass Issues extends React.Component {\n  render() {\n    return (\n      <div className='container'>\n\n        <div className='issues-header'>\n          <div className='issues-heading'>Issues List</div>\n          <div className='search-box'>\n            <input type='text'\n              placeholder='Search for issues'\n              value={this.props.queryText}\n              onChange={e => this.props.handleQuery(e)}\n              required={true}\n              autoFocus={true}/>\n            <button type='submit' value='Search'>\n                <i className={(this.props.isSearching ?\n                  'fas fa-circle-notch fa-spin' : 'fas fa-search')}></i>\n            </button>\n          </div>\n        </div>\n\n        <ColFilters\n          filters={this.props.filters}\n          updateFilter={this.props.updateFilter}\n        />\n\n        <table className='table table-bordered table-hover'>\n        <tbody>\n        <tr>\n          <th> S.N. </th>\n          <th className={!this.props.filters.description ? 'hidden' : ''}> Description </th>\n          <th className={!this.props.filters.severity ? 'hidden' : ''}> Severity </th>\n          <th className={!this.props.filters.status ? 'hidden' : ''}> Status </th>\n          <th className={!this.props.filters.createdDate ? 'hidden' : ''}> Created Date </th>\n          <th className={!this.props.filters.resolvedDate ? 'hidden' : ''}> Resolved Date </th>\n          <th> View </th>\n          <th> Edit </th>\n          <th> Delete </th>\n        </tr>\n\n        {this.props.issues.length > 0 ? this.props.issues.map((issue, index) => (\n          <tr key={issue._id}>\n            <td> {index + 1} </td>\n            <td className={!this.props.filters.description ? 'hidden' : ''}>\n              {issue.description}\n            </td>\n            <td className={!this.props.filters.severity ? 'hidden' : ''}>\n              {issue.severity}\n            </td>\n            <td className={!this.props.filters.status ? 'hidden' : ''}>\n              {issue.status}\n            </td>\n            <td className={!this.props.filters.createdDate ? 'hidden' : ''}>\n              {Moment(issue.createdDate).format('Do MMM YYYY')}\n            </td>\n            <td className={!this.props.filters.resolvedDate ? 'hidden' : ''}>\n              {Moment(issue.resolvedDate).format('Do MMM YYYY')}\n            </td>\n            <td>\n              <a href={'/issue/' + issue._id + '/view'}>\n                <button className='btn btn-primary'>\n                  View\n                </button>\n              </a>\n             </td>\n             <td>\n              <a href={'/issue/' + issue._id + '/edit'}>\n                <button className='btn btn-info'>\n                  Edit\n                </button>\n              </a>\n             </td>\n             <td>\n              <button className='btn btn-danger'\n                onClick={() => this.props.deleteIssue(issue._id)}>\n                Delete\n              </button>\n             </td>\n          </tr>\n        )) :\n          <tr className='center'>\n            <td className='no-issue' colSpan='9'> No data to show !!! </td>\n          </tr>\n         }\n\n         </tbody>\n        </table>\n      </div>\n     )\n  }\n}\n\nexport default Issues;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Issues from './components/issues';\n\nimport { BASE_URL } from './config';\n\nconst API_URL = `${BASE_URL}/issues`;\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      issues: [],\n      isSearching: false,\n      queryText: '',\n      colFilters: {\n        showFilters: false,\n        description: true,\n        severity: true,\n        status: true,\n        createdDate: true,\n        resolvedDate: true\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Get Issues from API\n    this.getIssues();\n  }\n\n  getIssues = () => {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(issues => {\n        this.setState({issues});\n      }).catch(err => {\n        console.log(err);\n      });\n  };\n\n  deleteIssue = (id) => {\n    fetch(`${API_URL}/${id}`, {\n      method: 'delete'\n    }).then(res => res.json())\n      .then(res => {\n        console.log(res);\n\n        let issues = this.state.issues;\n        issues = issues.filter(issue => issue._id !== id);\n        this.setState({issues});\n\n      }).catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleQuery = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      queryText: event.target.value\n    }, () => { this.searchIssues(); });\n\n\n  };\n\n  searchIssues = () => {\n    this.setState({ isSearching: true });\n    let query = this.state.queryText;\n    fetch(`${API_URL}?q=${query}`)\n      .then(res => res.json())\n      .then(issues => {\n        this.setState({\n          issues: issues,\n          isSearching: false\n        });\n      }).catch(err => {\n        this.setState({ isSearching: false });\n      });\n  };\n\n  updateFilter = (key) => {\n    let colFilters = this.state.colFilters;\n    colFilters[key] = !colFilters[key];\n    this.setState({ colFilters });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Issues\n          issues={this.state.issues}\n          deleteIssue={this.deleteIssue}\n          isSearching={this.state.isSearching}\n          handleQuery={this.handleQuery}\n          queryText={this.state.queryText}\n          filters={this.state.colFilters}\n          updateFilter={this.updateFilter}\n        />\n        {/*<a href='/new-issue' className='add-issue-btn'>\n            <i className=\"fas fa-plus\"></i>\n        </a>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm bg-light justify-content-between\">\n        <div className=\"navbar-brand\">\n          <a className=\"product-title\" href=\"/\"> Issue Tracker </a>\n        </div>\n        <div>\n          <NavLink className=\"nav-link\" exact activeClassName=\"active\" to=\"/new-issue\">\n          New Issue\n          </NavLink>\n        </div>\n      </nav>\n      )\n  }\n}\n\nexport default Header\n","import React from 'react';\nimport Moment from 'moment';\n\nimport { BASE_URL } from '../config';\n\nconst API_URL = `${BASE_URL}/issues`;\n\nclass NewIssue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issue: {}\n    }\n  }\n\n  handleDescriptionChange = (event) => {\n    let issue = this.state.issue;\n    issue.description = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleSeverityChange = (event) => {\n    let issue = this.state.issue;\n    issue.severity = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleStatusChange = (event) => {\n    let issue = this.state.issue;\n    issue.status = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleCreatedDateChange = (event) => {\n    let issue = this.state.issue;\n    issue.createdDate = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleResolvedDateChange = (event) => {\n    let issue = this.state.issue;\n    issue.resolvedDate = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    let issue = this.state.issue;\n\n    fetch(`${API_URL}`, {\n        method: 'post',\n        headers: { 'Content-type': 'application/json' },\n        body: JSON.stringify(issue)\n      }\n    ).then(res => res.json())\n    .then(newIssue => {\n      this.props.history.push(`/issue/${newIssue._id}/view`);\n    }).catch(err => {\n      console.log(err);\n    });\n\n  };\n\n  render() {\n    return (\n      <div className='container'>\n\n        <form\n          className='form form-horizontal new-issue-form issue-card'\n          onSubmit={e => this.handleSubmit(e)}>\n\n          <div className='form-group'>\n            <h4>New Issue</h4>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              rows='4'\n              className='col-sm-9'\n              required\n              id='description'\n              value={this.state.issue.description}\n              onChange={e => this.handleDescriptionChange(e)}\n              placeholder='Enter Description of the Issue'\n             />\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='severity'>\n              Severity\n            </label>\n            <select\n              className='col-sm-9'\n              required\n              id='severity'\n              value={this.state.issue.severity}\n              onChange={e => this.handleSeverityChange(e)}>\n              <option value=''>Select an option</option>\n              <option value='Critical'>Critical</option>\n              <option value='Major'>Major</option>\n              <option value='Minor'>Minor</option>\n             </select>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='status'>\n              Status\n            </label>\n            <select\n              className='col-sm-9'\n              required\n              id='status'\n              value={this.state.issue.status}\n              onChange={e => this.handleStatusChange(e)}>\n              <option value=''>Select an option</option>\n              <option value='Open'>Open</option>\n              <option value='In Progress'>In Progress</option>\n              <option value='Closed'>Closed</option>\n             </select>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='createdDate'>\n              Created Date\n            </label>\n            <input\n              type='date'\n              className='col-sm-9'\n              required\n              id='createdDate'\n              value={Moment(this.state.issue.createdDate).format('YYYY-MM-DD')}\n              onChange={e => this.handleCreatedDateChange(e)}\n             />\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='resolvedDate'>\n              Resolved Date\n            </label>\n            <input\n              type='date'\n              className='col-sm-9'\n              required\n              id='resolvedDate'\n              value={Moment(this.state.issue.resolvedDate).format('YYYY-MM-DD')}\n              onChange={e => this.handleResolvedDateChange(e)}\n             />\n          </div>\n\n          <div className='form-group'>\n            <span className='col-sm-4'>\n              <button className=\"btn btn-primary\" type='submit'>\n                Create\n              </button>\n            </span>\n          </div>\n        </form>\n        <span className='col-sm-offset-6 col-sm-8'>\n          <a href={'/'}>\n            <button className='btn btn-danger'> Home </button>\n          </a>\n        </span>\n\n      </div>\n    )\n  }\n}\n\nexport default NewIssue;\n","import React from 'react';\nimport Moment from 'moment';\n\nimport { BASE_URL } from '../config';\n\nconst API_URL = `${BASE_URL}/issues`;\n\nclass ViewIssue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issue: {}\n    }\n  }\n\n  componentDidMount() {\n\n    let id = this.props.location.pathname.split('/')[2];\n\n    fetch(`${API_URL}/${id}`).then(res => res.json())\n    .then(issue => {\n      this.setState({ issue });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n\n        <div className='issue-card form form-horizontal'>\n            <div className='form-group center'>\n              <h5>Issue Details</h5>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Description </span>\n              <span className='col-sm-9'>{this.state.issue.description}</span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Severity </span>\n              <span className='col-sm-9'>{this.state.issue.severity}</span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Status </span>\n              <span className='col-sm-9'>{this.state.issue.status}</span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Created Date </span>\n              <span className='col-sm-9'>\n                {Moment(this.state.issue.createdDate).format('Do MMM YYYY')}\n              </span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'> Resolved Date </span>\n              <span className='col-sm-9'>\n                {Moment(this.state.issue.resolvedDate).format('Do MMM YYYY')}\n              </span>\n            </div>\n\n            <div className='form-group'>\n              <span className='col-sm-3'>\n                <a href={'/issue/' + this.state.issue._id + '/edit'}>\n                  <button className='btn btn-primary'> Edit </button>\n                </a>\n              </span>\n              <span className='col-sm-offset-6 col-sm-9'>\n                <a href={'/'}>\n                  <button className='btn btn-danger'> Home </button>\n                </a>\n              </span>\n            </div>\n\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default ViewIssue;\n","import React from 'react';\nimport Moment from 'moment';\n\nimport { BASE_URL } from '../config';\n\nconst API_URL = `${BASE_URL}/issues`;\n\nclass EditIssue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issue: {}\n    }\n  }\n\n  componentDidMount() {\n\n    let id = this.props.location.pathname.split('/')[2];\n\n    fetch(`${API_URL}/${id}`).then(res => res.json())\n    .then(issue => {\n      this.setState({ issue });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  handleDescriptionChange = (event) => {\n    let issue = this.state.issue;\n    issue.description = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleSeverityChange = (event) => {\n    let issue = this.state.issue;\n    issue.severity = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleStatusChange = (event) => {\n    let issue = this.state.issue;\n    issue.status = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleCreatedDateChange = (event) => {\n    let issue = this.state.issue;\n    issue.createdDate = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleResolvedDateChange = (event) => {\n    let issue = this.state.issue;\n    issue.resolvedDate = event.target.value;\n    this.setState({ issue });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    let issue = this.state.issue;\n\n    fetch(`${API_URL}/${issue._id}`, {\n        method: 'put',\n        headers: { 'Content-type': 'application/json' },\n        body: JSON.stringify(issue)\n      }\n    ).then(res => res.json())\n    .then(updatedIssue => {\n      this.props.history.push(`/issue/${updatedIssue._id}/view`);\n    }).catch(err => {\n      console.log(err);\n    });\n\n  };\n\n  render() {\n    return (\n      <div className='container'>\n\n        <form\n          className='form form-horizontal new-issue-form issue-card'\n          onSubmit={e => this.handleSubmit(e)}>\n\n          <div className='form-group'>\n            <h4>Edit Issue</h4>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              className='col-sm-9'\n              rows='4'\n              required\n              id='description'\n              value={this.state.issue.description}\n              onChange={e => this.handleDescriptionChange(e)}\n              placeholder='Enter Description of the Issue'\n             />\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='severity'>\n              Severity\n            </label>\n            <select\n              className='col-sm-9'\n              required\n              id='severity'\n              value={this.state.issue.severity}\n              onChange={e => this.handleSeverityChange(e)}\n             >\n              <option value='Critical'>Critical</option>\n              <option value='Major'>Major</option>\n              <option value='Minor'>Minor</option>\n             </select>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='status'>\n              Status\n            </label>\n            <select\n              className='col-sm-9'\n              required\n              id='status'\n              value={this.state.issue.status}\n              onChange={e => this.handleStatusChange(e)}\n             >\n              <option value='Open'>Open</option>\n              <option value='In Progress'>In Progress</option>\n              <option value='Closed'>Closed</option>\n             </select>\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='createdDate'>\n              Created Date\n            </label>\n            <input\n              type='date'\n              className='col-sm-9'\n              required\n              id='createdDate'\n              value={Moment(this.state.issue.createdDate).format('YYYY-MM-DD')}\n              onChange={e => this.handleCreatedDateChange(e)}\n             />\n          </div>\n\n          <div className='form-group'>\n            <label className='control-label col-sm-3' htmlFor='resolvedDate'>\n              Resolved Date\n            </label>\n            <input\n              type='date'\n              className='col-sm-9'\n              required\n              id='resolvedDate'\n              value={Moment(this.state.issue.resolvedDate).format('YYYY-MM-DD')}\n              onChange={e => this.handleResolvedDateChange(e)}\n             />\n          </div>\n\n          <div className='form-group'>\n            <span className='col-sm-4'>\n              <button className=\"btn btn-info\" type='submit'>\n                Update\n              </button>\n            </span>\n          </div>\n        </form>\n        <span className='col-sm-offset-6 col-sm-8'>\n          <a href={'/'}>\n            <button className='btn btn-danger'> Home </button>\n          </a>\n        </span>\n\n      </div>\n    )\n  }\n}\n\nexport default EditIssue;\n","import React from 'react';\n\nconst Notfound = () => <div className='container'>\n  <h1>Page Not found</h1>\n  Go to <a href='/'>Home</a>\n</div>;\n\nexport default Notfound;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Header from './components/header';\nimport NewIssue from './components/newIssue';\nimport ViewIssue from './components/viewIssue';\nimport EditIssue from './components/editIssue';\nimport NotFound from './components/404';\n\nconst routing = (\n  <Router>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/new-issue\" component={NewIssue} />\n      <Route exact path=\"/issue/:id/view\" component={ViewIssue} />\n      <Route exact path=\"/issue/:id/edit\" component={EditIssue} />\n      <Route component={NotFound} />\n    </Switch>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}